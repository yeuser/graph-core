buildscript {
    ext.kotlin_version = '1.3.10'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = 'me.graph'
version = '0.1.0'

ext {
    java_version = 1.8
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = java_version

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-jdk8', version: '1.1.0-alpha'

    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
//    compile group: 'com.carrotsearch', name: 'hppc', version: '0.8.1'
//    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'it.unimi.dsi', name: 'fastutil', version: '8.2.2'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    doFirst {
        manifest {
            attributes(
                    "Implementation-Title": "${project.name}",
                    "Implementation-Version": version
            )
        }
    }
}

if (project.plugins.hasPlugin('java')) {
    manifest {
        attributes 'provider': 'gradle'
    }
    configurations {
        published
    }
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
    artifacts {
        published sourceJar
        published javadocJar
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = java_version
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = java_version
    }
}